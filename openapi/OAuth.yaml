openapi: 3.0.3
info:
  title: OAuth API
  version: '1.0'
servers:
  - url: https://wwwcie.ups.com
    description: Customer Integration Environment
  - url: https://onlinetools.ups.com
    description: Production
paths:
  "/security/v1/oauth/authorize":
    get:
      summary: Authorize Client
      description: |-
        The Authorize Client endpoint initiates the OAuth Authorization Code flow by redirecting the user to UPS for logging-in and authorize the client application. To begin the authorization flow, the application constructs a URL using the application's client Id, the redirect URI, the scope of permissions requested, and a random string used for subsequent verification. A successful response redirects back to the client with an authorization code that can be exchanged for an access token.
      operationId: AuthorizeClient
      parameters:
        - in: query
          name: client_id
          schema:
            type: string
          description: The public identifier for your application, obtained when you,
            the developer first registered the application.
          required: true
        - in: query
          name: redirect_uri
          schema:
            type: string
          description: URL that tells the authorization server where to send the user
            back to after they approve the request.
          required: true
        - in: query
          name: response_type
          schema:
            type: string
          description: 'Valid Values: code'
          required: true
        - in: query
          name: state
          schema:
            type: string
          description: A random string generated by the application and included in
            the request to prevent CSRF attacks. The application checks that the same
            value is returned after the user authorizes the app.
          required: false
        - in: query
          name: scope
          schema:
            type: string
          description: One or more space-separated strings indicating which permissions
            the application is requesting.
          required: false
      responses:
        '302':
          description: successful operation
          headers:
            location:
              description: |-
                The UPS login redirection URI in the following format: https://www.ups.com/lasso/signin?client_id={client_id}&redirect_uri={redirect_uri}&response_type=code&scope={scope}&state={state}&type=ups_com_api

                The value of 'state' will be the same value that the application initially set in the request.
                The 'code' is the authorization code generated by the authorization server.
              schema:
                type: string
            appname:
              description: Name of the application requesting the authorization code.
              schema:
                type: string
            displayname:
              description: Display name of the application requesting the Authorization
                code.
              schema:
                type: string
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
        '401':
          description: Unauthorized Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
        '403':
          description: Blocked Merchant
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
  "/security/v1/oauth/token":
    post:
      security:
        - basicAuth: []
      description: The Generate Token endpoint exchanges the authorization code received
        from the client application for an access token and a refresh token. The client
        uses the access token to make API requests on behalf of the user by including
        it in the authorization header. The access token will expire after a certain
        period and can be refreshed by using the /refresh endpoint.
      operationId: GenerateToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: 'Valid values: authorization_code'
                  default: authorization_code
                code:
                  type: string
                  description: Authorization code from the UPS login system.
                redirect_uri:
                  type: string
                  description: Callback URL for the requesting application.
              required:
                - grant_type
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/generateTokenSuccessResponse"
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
        '401':
          description: Unauthorized Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
        '403':
          description: Blocked Merchant
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
  "/security/v1/oauth/refresh":
    post:
      security:
        - basicAuth: []
      summary: Refresh Token
      operationId: RefreshToken
      description: The /refresh endpoint is used to refresh an expired access token
        in order to continue accessing a UPS API on behalf of a user. The endpoint
        generates a new access/refresh token pair by exchanging a valid refresh token.
        A successful response returns new access and refresh tokens for ongoing API
        access without re-prompting the user.
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: 'Valid values: refresh_token'
                  default: refresh_token
                refresh_token:
                  type: string
                  description: Refresh token from GenerateToken operation
              required:
                - grant_type
                - refresh_token
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/refreshTokenSuccessResponse"
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
        '401':
          description: Unauthorized Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
        '403':
          description: Blocked Merchant
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
        '429':
          description: Rate Limit Exceeded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errorResponse"
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: |
        Find your Client ID and Secret on your app info page.
        1. Select \"Try It\"
        2. In the Security section enter your Client ID as the Username and your Secret as the Password.
        3. Enter any additional information in the Body and Parameters sections.
        4. Select \"Send\" to execute your API request
  schemas:
    generateTokenSuccessResponse:
      type: object
      properties:
        refresh_token_expires_in:
          description: Expiration time for requested refresh token in seconds.
          type: string
          nullable: true
        refresh_token_status:
          description: Status for requested refresh token.
          type: string
          nullable: true
        token_type:
          description: Type of requested access token
          type: string
        issued_at:
          description: Issue time of requested token in milliseconds.
          type: string
        client_id:
          description: Client id for requested token.
          type: string
        access_token:
          description: Token to be used in API requests.
          type: string
        refresh_token:
          description: Refresh token to be used in refresh requests when obtaining
            new access token.
          type: string
          nullable: true
        scope:
          description: Scope for requested token.
          type: string
        refresh_token_issued_at:
          description: Time that refresh token was issued in milliseconds.
          type: string
          nullable: true
        expires_in:
          description: Expire time for requested token in seconds.
          type: string
        refresh_count:
          description: Number of refreshes for requested token.
          type: string
        status:
          description: Status for requested token.
          type: string
    refreshTokenSuccessResponse:
      type: object
      properties:
        refresh_token_expires_in:
          description: Expiration time for requested refresh token in seconds.
          type: string
        refresh_token_status:
          description: Status for requested refresh token.
          type: string
        token_type:
          description: Type for requested token.
          type: string
        issued_at:
          description: Issue time for requested token in milliseconds.
          type: string
        client_id:
          description: Client id for requested token.
          type: string
        access_token:
          description: Token to be used in API requests.
          type: string
        refresh_token:
          description: Token to be used in refresh requests.
          type: string
        scope:
          description: Scope for requested token.
          type: string
        refresh_token_issued_at:
          description: Issue time for requested refresh token in milliseconds.
          type: string
        expires_in:
          description: Expiration time for requested access token in seconds.
          type: string
        refresh_count:
          description: Number of refreshes for requested token.
          type: string
        status:
          description: Status for requested token.
          type: string
    errorResponse:
      type: object
      properties:
        response:
          "$ref": "#/components/schemas/errorResponseWrapper"
    errorResponseWrapper:
      type: object
      properties:
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/error"
    error:
      type: object
      properties:
        code:
          description: Error code
          type: string
        message:
          description: Error message
          type: string